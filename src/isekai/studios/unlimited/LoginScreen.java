/*
 * Copyright 2021 minej.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *      http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
package isekai.studios.unlimited;

/**
 *
 * @author minej
 */
import java.awt.*;
import java.lang.*;
import java.sql.*;
import java.util.logging.Level;
import java.util.logging.Logger;
public class LoginScreen extends javax.swing.JFrame {
int xMouse, yMouse, DMx, DMy, MTotx, MToty;
int SUser = 0, SPass = 0;


public static Connection getConnection(){
     
        Connection con = null;
        try {
            String url = "jdbc:mysql://remotemysql.com:3306/Kbx8dKGuZG";
            con = DriverManager.getConnection(url,"Kbx8dKGuZG","jD48alsLz6");
            System.out.println("Database Connection Successful");
            
        } catch (Exception ex) {
            System.out.println(ex.getMessage());
        }
        
        return con;
    }


    /**
     * Creates new form GUI
     */
    public LoginScreen() {
        initComponents();
        this.setLocationRelativeTo(null);
    }
    
    // </editor-fold>
    
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        MainPan = new javax.swing.JPanel();
        CustomBar = new javax.swing.JPanel();
        Ext = new javax.swing.JButton();
        Minimize = new javax.swing.JButton();
        LLabel = new javax.swing.JLabel();
        IconHolder = new javax.swing.JPanel();
        CompanyIcon = new javax.swing.JLabel();
        PLabel = new javax.swing.JLabel();
        ULabel = new javax.swing.JLabel();
        Username = new javax.swing.JTextField();
        Password = new javax.swing.JPasswordField();
        Confirm = new javax.swing.JButton();
        Exit = new javax.swing.JButton();
        CompanyName = new javax.swing.JLabel();
        jLabel8 = new javax.swing.JLabel();
        ShowPass = new javax.swing.JCheckBox();
        ErrorNot = new javax.swing.JLabel();
        Background = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setUndecorated(true);
        setResizable(false);

        MainPan.setBackground(new Color(0, 0, 0, 0));
        MainPan.addComponentListener(new java.awt.event.ComponentAdapter() {
            public void componentShown(java.awt.event.ComponentEvent evt) {
                MainPanComponentShown(evt);
            }
        });

        CustomBar.setBackground(new java.awt.Color(76, 76, 76));
        CustomBar.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));
        CustomBar.setAlignmentX(0.0F);
        CustomBar.setAlignmentY(0.0F);
        CustomBar.setPreferredSize(new java.awt.Dimension(857, 35));
        CustomBar.addMouseMotionListener(new java.awt.event.MouseMotionAdapter() {
            public void mouseDragged(java.awt.event.MouseEvent evt) {
                CustomBarMouseDragged(evt);
            }
        });
        CustomBar.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mousePressed(java.awt.event.MouseEvent evt) {
                CustomBarMousePressed(evt);
            }
        });
        CustomBar.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        Ext.setBackground(new java.awt.Color(89, 89, 89));
        Ext.setFont(new java.awt.Font("Arial Black", 1, 16)); // NOI18N
        Ext.setForeground(new java.awt.Color(204, 204, 204));
        Ext.setText("X");
        Ext.setAlignmentY(0.0F);
        Ext.setBorder(javax.swing.BorderFactory.createEtchedBorder());
        Ext.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        Ext.setFocusPainted(false);
        Ext.setFocusable(false);
        Ext.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        Ext.setIconTextGap(0);
        Ext.setMaximumSize(new java.awt.Dimension(30, 30));
        Ext.setMinimumSize(new java.awt.Dimension(30, 30));
        Ext.setPreferredSize(new java.awt.Dimension(30, 30));
        Ext.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ExtActionPerformed(evt);
            }
        });
        CustomBar.add(Ext, new org.netbeans.lib.awtextra.AbsoluteConstraints(568, 2, -1, -1));

        Minimize.setBackground(new java.awt.Color(89, 89, 89));
        Minimize.setFont(new java.awt.Font("Wide Latin", 1, 16)); // NOI18N
        Minimize.setForeground(new java.awt.Color(204, 204, 204));
        Minimize.setText("--");
        Minimize.setAlignmentY(0.0F);
        Minimize.setBorder(javax.swing.BorderFactory.createEtchedBorder());
        Minimize.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        Minimize.setFocusPainted(false);
        Minimize.setFocusable(false);
        Minimize.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        Minimize.setIconTextGap(0);
        Minimize.setMaximumSize(new java.awt.Dimension(30, 30));
        Minimize.setMinimumSize(new java.awt.Dimension(30, 30));
        Minimize.setPreferredSize(new java.awt.Dimension(30, 30));
        Minimize.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                MinimizeActionPerformed(evt);
            }
        });
        CustomBar.add(Minimize, new org.netbeans.lib.awtextra.AbsoluteConstraints(538, 2, -1, -1));

        LLabel.setFont(new java.awt.Font("000 Elephantmen TB", 0, 48)); // NOI18N
        LLabel.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        LLabel.setText("Login");
        LLabel.setVerticalAlignment(javax.swing.SwingConstants.BOTTOM);
        LLabel.setAlignmentY(0.0F);
        LLabel.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);

        CompanyIcon.setIcon(new javax.swing.ImageIcon(getClass().getResource("/res/Images/Icons/Logo/ISU Logo.png"))); // NOI18N

        javax.swing.GroupLayout IconHolderLayout = new javax.swing.GroupLayout(IconHolder);
        IconHolder.setLayout(IconHolderLayout);
        IconHolderLayout.setHorizontalGroup(
            IconHolderLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(CompanyIcon, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        IconHolderLayout.setVerticalGroup(
            IconHolderLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(CompanyIcon, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        PLabel.setFont(new java.awt.Font("000 CCDigitalDelivery [TeddyBea", 1, 18)); // NOI18N
        PLabel.setText("Password:");

        ULabel.setFont(new java.awt.Font("000 CCDigitalDelivery [TeddyBea", 1, 18)); // NOI18N
        ULabel.setText("Username:");

        Username.setFont(new java.awt.Font("Arial Black", 0, 13)); // NOI18N
        Username.setText("Username");
        Username.setToolTipText("Enter Username");
        Username.setActionCommand("<Not Set>");
        Username.setAutoscrolls(false);
        Username.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                UsernameMouseClicked(evt);
            }
            public void mousePressed(java.awt.event.MouseEvent evt) {
                UsernameMousePressed(evt);
            }
        });
        Username.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                UsernameActionPerformed(evt);
            }
        });
        Username.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                UsernameKeyPressed(evt);
            }
            public void keyReleased(java.awt.event.KeyEvent evt) {
                UsernameKeyReleased(evt);
            }
            public void keyTyped(java.awt.event.KeyEvent evt) {
                UsernameKeyTyped(evt);
            }
        });

        Password.setFont(new java.awt.Font("Arial Black", 0, 13)); // NOI18N
        Password.setText("Password");
        Password.setToolTipText("Enter Password");
        Password.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mousePressed(java.awt.event.MouseEvent evt) {
                PasswordMousePressed(evt);
            }
        });
        Password.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                PasswordActionPerformed(evt);
            }
        });
        Password.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                PasswordKeyPressed(evt);
            }
            public void keyTyped(java.awt.event.KeyEvent evt) {
                PasswordKeyTyped(evt);
            }
        });

        Confirm.setBackground(new java.awt.Color(204, 204, 204));
        Confirm.setFont(new java.awt.Font("000 Felt [TeddyBear]", 0, 20)); // NOI18N
        Confirm.setForeground(new java.awt.Color(0, 0, 0));
        Confirm.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));
        Confirm.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        Confirm.setLabel("Confirm");
        Confirm.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ConfirmActionPerformed(evt);
            }
        });
        Confirm.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                ConfirmKeyPressed(evt);
            }
        });

        Exit.setBackground(new java.awt.Color(204, 204, 204));
        Exit.setFont(new java.awt.Font("000 Felt [TeddyBear]", 0, 20)); // NOI18N
        Exit.setForeground(new java.awt.Color(0, 0, 0));
        Exit.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));
        Exit.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        Exit.setLabel("Exit");
        Exit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ExitActionPerformed(evt);
            }
        });
        Exit.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                ExitKeyPressed(evt);
            }
        });

        CompanyName.setFont(new java.awt.Font("000 CCDigitalDelivery [TeddyBea", 0, 18)); // NOI18N
        CompanyName.setForeground(new java.awt.Color(242, 94, 15));
        CompanyName.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        CompanyName.setText("Isekai Studios Unlimited");

        jLabel8.setFont(new java.awt.Font("000 CCDigitalDelivery [TeddyBea", 0, 13)); // NOI18N
        jLabel8.setForeground(new java.awt.Color(51, 51, 51));
        jLabel8.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel8.setText("Feb 2021 || © All Rights Reserved");
        jLabel8.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);

        ShowPass.setText("Show Password");
        ShowPass.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mousePressed(java.awt.event.MouseEvent evt) {
                ShowPassMousePressed(evt);
            }
        });
        ShowPass.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ShowPassActionPerformed(evt);
            }
        });

        ErrorNot.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        ErrorNot.setForeground(new java.awt.Color(255, 51, 51));
        ErrorNot.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);

        javax.swing.GroupLayout MainPanLayout = new javax.swing.GroupLayout(MainPan);
        MainPan.setLayout(MainPanLayout);
        MainPanLayout.setHorizontalGroup(
            MainPanLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, MainPanLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel8, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
            .addGroup(MainPanLayout.createSequentialGroup()
                .addGroup(MainPanLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(CustomBar, javax.swing.GroupLayout.PREFERRED_SIZE, 600, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(MainPanLayout.createSequentialGroup()
                        .addGap(239, 239, 239)
                        .addComponent(IconHolder, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(MainPanLayout.createSequentialGroup()
                        .addGap(189, 189, 189)
                        .addComponent(CompanyName, javax.swing.GroupLayout.PREFERRED_SIZE, 204, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(MainPanLayout.createSequentialGroup()
                        .addGap(238, 238, 238)
                        .addComponent(LLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 115, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(MainPanLayout.createSequentialGroup()
                        .addGap(151, 151, 151)
                        .addComponent(Confirm, javax.swing.GroupLayout.PREFERRED_SIZE, 80, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(138, 138, 138)
                        .addComponent(Exit, javax.swing.GroupLayout.PREFERRED_SIZE, 80, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(MainPanLayout.createSequentialGroup()
                        .addGap(123, 123, 123)
                        .addGroup(MainPanLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(ULabel)
                            .addComponent(PLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 95, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(85, 85, 85)
                        .addGroup(MainPanLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(MainPanLayout.createSequentialGroup()
                                .addComponent(Password, javax.swing.GroupLayout.PREFERRED_SIZE, 170, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(ShowPass))
                            .addComponent(Username, javax.swing.GroupLayout.PREFERRED_SIZE, 170, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addComponent(ErrorNot, javax.swing.GroupLayout.PREFERRED_SIZE, 600, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(0, 0, Short.MAX_VALUE))
        );
        MainPanLayout.setVerticalGroup(
            MainPanLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(MainPanLayout.createSequentialGroup()
                .addComponent(CustomBar, javax.swing.GroupLayout.PREFERRED_SIZE, 34, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(6, 6, 6)
                .addComponent(IconHolder, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, 0)
                .addComponent(CompanyName)
                .addGap(6, 6, 6)
                .addComponent(LLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(12, 12, 12)
                .addGroup(MainPanLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(ULabel)
                    .addComponent(Username, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(32, 32, 32)
                .addGroup(MainPanLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(MainPanLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(ShowPass)
                        .addComponent(Password, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(MainPanLayout.createSequentialGroup()
                        .addGap(1, 1, 1)
                        .addComponent(PLabel)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 24, Short.MAX_VALUE)
                .addGroup(MainPanLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(Confirm, javax.swing.GroupLayout.PREFERRED_SIZE, 34, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(Exit, javax.swing.GroupLayout.PREFERRED_SIZE, 34, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(ErrorNot, javax.swing.GroupLayout.PREFERRED_SIZE, 24, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel8)
                .addGap(2, 2, 2))
        );

        Background.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        Background.setIcon(new javax.swing.ImageIcon(getClass().getResource("/res/Images/Background/BackgroundResizedDarken.png"))); // NOI18N
        Background.setAlignmentY(0.0F);
        Background.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        Background.setIconTextGap(0);
        Background.setRequestFocusEnabled(false);
        this.pack();

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(MainPan, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(layout.createSequentialGroup()
                    .addComponent(Background, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGap(0, 0, Short.MAX_VALUE)))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(MainPan, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(layout.createSequentialGroup()
                    .addComponent(Background, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGap(0, 0, Short.MAX_VALUE)))
        );

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void ExtActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ExtActionPerformed
        // TODO add your handling code here:
        System.exit(0);
    }//GEN-LAST:event_ExtActionPerformed

    private void MinimizeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_MinimizeActionPerformed
        // TODO add your handling code here:
        this.setState(Frame.ICONIFIED);
    }//GEN-LAST:event_MinimizeActionPerformed

    private void CustomBarMouseDragged(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_CustomBarMouseDragged
        // TODO add your handling code here:

        /*if (getExtendedState() == JFrame.MAXIMIZED_BOTH) {
            this.setExtendedState(JFrame.NORMAL);

            DMx = evt.getXOnScreen();
            DMy = evt.getYOnScreen();
            MTotx = DMx - xMouse;
            MToty = DMy - yMouse;
            this.setLocation(xMouse, yMouse);

        }
        */

        DMx = evt.getXOnScreen();
        DMy = evt.getYOnScreen();
        MTotx = DMx - xMouse;
        MToty = DMy - yMouse;
        this.setLocation(MTotx, MToty);

    }//GEN-LAST:event_CustomBarMouseDragged

    private void CustomBarMousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_CustomBarMousePressed
        // TODO add your handling code here:
        xMouse = evt.getX();
        yMouse = evt.getY();
    }//GEN-LAST:event_CustomBarMousePressed

    private void MainPanComponentShown(java.awt.event.ComponentEvent evt) {//GEN-FIRST:event_MainPanComponentShown
        // TODO add your handling code here:
    }//GEN-LAST:event_MainPanComponentShown

    private void UsernameActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_UsernameActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_UsernameActionPerformed

    private void ConfirmActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ConfirmActionPerformed
        // TODO add your handling code here:
        String User = Username.getText(), Pass = Password.getText();
        
        PreparedStatement ps, ps2;
        ResultSet rs;
        
        String query = "SELECT * FROM `Employees` WHERE `Username` =? AND `Password` =?";
        String query2 = "UPDATE `CurentLog` SET `LoggedInAs`=?";        
    try {
        this.setCursor(Cursor.getPredefinedCursor(Cursor.WAIT_CURSOR));
        Confirm.setCursor(Cursor.getPredefinedCursor(Cursor.WAIT_CURSOR));
        ps = LoginScreen.getConnection().prepareStatement(query);
        
        ps.setString(1, User);
        ps.setString(2, Pass);
        
        rs = ps.executeQuery();
        
        if(rs.next()){
        ps2 = LoginScreen.getConnection().prepareStatement(query2);
        ps2.setString(1, User);
        ps2.executeUpdate();
        
        
        this.setVisible(false);
        new MainPanel().setVisible(true);
        } else {
            new LoginError().setVisible(true);
            String Passget = Password.getText();
            System.out.println(Passget);
            Password.setText(null);
        }
        
    } catch (SQLException ex) {
        ErrorNot.setText("An Error has occured while contacting the server please try again.");
        Logger.getLogger(LoginScreen.class.getName()).log(Level.SEVERE, null, ex);
    } finally {
            this.setCursor(Cursor.getDefaultCursor());
            Confirm.setCursor(Cursor.getDefaultCursor());
    }
    }//GEN-LAST:event_ConfirmActionPerformed

    private void ExitActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ExitActionPerformed
        // TODO add your handling code here:
        System.exit(0);
    }//GEN-LAST:event_ExitActionPerformed

    private void UsernameKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_UsernameKeyPressed
        // TODO add your handling code here:
        int key=evt.getKeyCode();
        if(key==10){
            Password.requestFocus();
        }
    }//GEN-LAST:event_UsernameKeyPressed

    private void PasswordKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_PasswordKeyPressed
        // TODO add your handling code here:
        int key=evt.getKeyCode();
        if(key==10){
            Confirm.doClick();
        }
    }//GEN-LAST:event_PasswordKeyPressed

    private void PasswordActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_PasswordActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_PasswordActionPerformed

    private void ConfirmKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_ConfirmKeyPressed
        // TODO add your handling code here:
        int key=evt.getKeyCode();
        if(key==10){
            Confirm.doClick();
        }
    }//GEN-LAST:event_ConfirmKeyPressed

    private void ExitKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_ExitKeyPressed
        // TODO add your handling code here:
        int key=evt.getKeyCode();
        if(key==10){
            Exit.doClick();
        }
    }//GEN-LAST:event_ExitKeyPressed

    private void ShowPassActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ShowPassActionPerformed
        
    }//GEN-LAST:event_ShowPassActionPerformed

    private void ShowPassMousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_ShowPassMousePressed
        // TODO add your handling code here:
        Password.requestFocus();

        if(ShowPass.isSelected()){
            Password.setEchoChar('*');
        } else {
            Password.setEchoChar((char)0);
        }
    }//GEN-LAST:event_ShowPassMousePressed

    private void UsernameMousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_UsernameMousePressed
        // TODO add your handling code here:
        if(SUser == 0 && Username.getText().equals("Username")){
            Username.setText("");
            SUser = 1;
        }
    }//GEN-LAST:event_UsernameMousePressed

    private void UsernameKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_UsernameKeyTyped
        // TODO add your handling code here:
        if(SUser == 0){
            Username.setText("");
            SUser = 1;
        }
    }//GEN-LAST:event_UsernameKeyTyped

    private void UsernameKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_UsernameKeyReleased
        // TODO add your handling code here:
    }//GEN-LAST:event_UsernameKeyReleased

    private void PasswordMousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_PasswordMousePressed
        // TODO add your handling code here:
        if(SPass == 0 && Password.getText().equals("Password")){
            Password.setText("");
            SPass = 1;
        }
    }//GEN-LAST:event_PasswordMousePressed

    private void PasswordKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_PasswordKeyTyped
        // TODO add your handling code here:
        if(SPass == 0){
            Password.setText("");
            SPass = 1;
        }
    }//GEN-LAST:event_PasswordKeyTyped

    private void UsernameMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_UsernameMouseClicked
        // TODO add your handling code here:
    }//GEN-LAST:event_UsernameMouseClicked

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(LoginScreen.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(LoginScreen.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(LoginScreen.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(LoginScreen.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new LoginScreen().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel Background;
    private javax.swing.JLabel CompanyIcon;
    private javax.swing.JLabel CompanyName;
    private javax.swing.JButton Confirm;
    private javax.swing.JPanel CustomBar;
    private javax.swing.JLabel ErrorNot;
    private javax.swing.JButton Exit;
    private javax.swing.JButton Ext;
    private javax.swing.JPanel IconHolder;
    private javax.swing.JLabel LLabel;
    private javax.swing.JPanel MainPan;
    private javax.swing.JButton Minimize;
    private javax.swing.JLabel PLabel;
    private javax.swing.JPasswordField Password;
    private javax.swing.JCheckBox ShowPass;
    private javax.swing.JLabel ULabel;
    private javax.swing.JTextField Username;
    private javax.swing.JLabel jLabel8;
    // End of variables declaration//GEN-END:variables
}
